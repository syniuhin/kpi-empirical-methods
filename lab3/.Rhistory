oildata <- window(oil,start=1996,end=2007)
plot(oildata, ylab="Oil (millions of tonnes)",xlab="Year")
fit1 <- ses(oildata, alpha=0.2, initial="simple", h=3)
fit2 <- ses(oildata, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oildata, h=3)
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fitted(fit1), col="blue", type="o")
lines(fitted(fit2), col="red", type="o")
lines(fitted(fit3), col="green", type="o")
lines(fit1$mean, col="blue", type="o")
lines(fit2$mean, col="red", type="o")
lines(fit3$mean, col="green", type="o")
legend("topleft",lty=1, col=c(1,"blue","red","green"),
c("data", expression(alpha == 0.2), expression(alpha == 0.6),
expression(alpha == 0.89)),pch=1)
fit1 <- ses(oildata, alpha=0.2, initial="simple", h=3)
fit2 <- ses(oildata, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oildata, h=3)
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fitted(fit1), col="blue", type="o")
lines(fitted(fit2), col="red", type="o")
lines(fitted(fit3), col="green", type="o")
lines(fit1$mean, col="blue", type="o")
lines(fit2$mean, col="red", type="o")
lines(fit3$mean, col="green", type="o")
legend("topleft",lty=1, col=c(1,"blue","red","green"),
c("data", expression(alpha == 0.2), expression(alpha == 0.6),
expression(alpha == 0.89)),pch=1)
install.packages("UsingR")
library(UsingR)
data(galton)
library(reshape)
install.packages("reshape")
library(reshape)
long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g
g <- g + geom_histogram(colour = "black", binwidth = 1)
g <- g + facet_grid(. ~ variable)
g
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
minu <- sum(x*w) / sum(w)
final <- sum(w*(x-minu)^2)
c(minu, final)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
source('~/Coding/r/coursera/rmodels/1.R')
source('~/Coding/r/coursera/rmodels/1.R')
data(swiss); par(mfrow = c(2, 2))
fit <- lm(Fertility ~ . , data = swiss); plot(fit)
data(mtcars)
mpg
mtcars$cyl
gl(3, 2)
gl(mtcars$cyl)
cyl <- mtcars$cyl
levels(cyl)
cyl
factor(cyl)
cyl <- factor(cyl)
lm(mpg ~ cyl + wt, data = mtcars)
cyl
fcyl < cyl
fcyl <- cyl
lm(mpg ~ fcyl + wt, data = mtcars)
fcyl <- relevel(fcyl, 6)
fcyl <- relevel(fcyl, 2)
fcyl
lm(mpg ~ fcyl + wt, data = mtcars)
fit <- lm(mpg ~ fcyl + wt, data = mtcars)
coef(fit)
coef(fit)[3]
coef(fit)[3] - coef(fit)[2]
fcyl
summary(fit)
fitwt <- fit
fcyl <- cyl
fcyl
fitwt <- lm(mpg ~ fcyl + wt, data = mtcars)
fit <- lm(mpg ~ fcyl, data = mtcars)
fitwt
fit
fitwt
fit <- fitwt
fit1 <- fitwt
fit
fit1
fit2 <- lm(mpg ~ fcyl*wt, data = mtcars)
fit2
c(summary(fit1), summary(fit2))
summary(fit1, fit2)
summary(fit1)
summary(fit2)
anova(fit1)
anova(fit2)
anova(fit1, fit2)
anova(fit1, lm(mpg ~ fcyl : wt, data = mtcars))
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
wt
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
fit
influence(fit, do.coef = TRUE)
hat(fit)
hat(fit, intercept = TRUE)
~influence.measures
Zinfluence.measures
?influence.measures
influence.measure(fit)
influence.measures(fit)
influence(fit)
rstandard(fit)
rstudent(fit)
dfbetas(fit)
vif(fit)=
1
vif(fit)
dfbetas(fit)
round(dfbetas(fit)[, 2], 3)
hatvalues(fit)[5]
source('~/Coding/r/coursera/rmodels/1.R')
source('~/Coding/r/coursera/rmodels/1.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
sapply(c(fit1, fit2, fit3, fit4, fit5), r.squared)
source('~/Coding/r/coursera/course_project/script.R')
sapply(c(fit1, fit2, fit3, fit4, fit5), function(f) f$r.squared)
fit1$r.squared
fit2$r.squared
fit1
source('~/Coding/r/coursera/course_project/script.R')
sapply(c(fit1, fit2, fit3, fit4, fit5), function(f) summary(f)$r.squared)
source('~/Coding/r/coursera/course_project/script.R')
sapply(c(fit1, fit2, fit3, fit4, fit5), function(f) summary(f)$r.squared)
source('~/Coding/r/coursera/course_project/script.R')
lapply(c(fit1, fit2, fit3, fit4, fit5), function(f) summary(f)$r.squared)
apply(c(fit1, fit2, fit3, fit4, fit5), function(f) summary(f)$r.squared)
apply(c(fit1, fit2, fit3, fit4, fit5), FUN = function(f) summary(f)$r.squared)
source('~/Coding/r/coursera/course_project/script.R')
sapply(models, print)
sapply(models, r.squared)
sapply(models, function(f) f$r.squared)
sapply(models, function(f) summary(f)$r.squared)
sapply(models, function(f) summary(f))
lapply(models, function(f) summary(f))
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
lapply(models, function(f) summary(f))
lapply(models, function(f) summary(f)$residuals)
summary(models)
summary(models)[residuals]
summary(models[1])$r.squared
summary(models[1])
summary(models[[1]])
summary(fit1)
summary(fit1)$r.squared
summary(fit2)$r.squared
summary(fit3)$r.squared
summary(fit4)$r.squared
summary(fit5)$r.squared
summary(fit5)$adj.r.squared
summary(fit4)$adj.r.squared
summary(fit3)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit1)$adj.r.squared
step(fit1, fit5, direction = "forward")
step(fit1, scope = fit5, direction = "forward")
step(fit5, direction = "backward")
step(lm(mpg ~ ., data = my_mtcars))
step(fit5, direction = "backward")
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
source('~/Coding/r/coursera/course_project/script.R')
?glm
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
head(econsumption)
residuals(fit)
abline(fit)
abline(fit, col = "red")
fit
plot(Mwh ~ temp, data=econsumption)
abline(fit)
abline(residuals(fit) ~ econsumption$temp)
plot(residuals(fit))
abline(residuals(fit))
abline(residuals(fit), 1:12)
?abline
rs <- residuals(fit) ~ temp
rs
coef(rs)
rs <- lm(residuals(fit) ~ temp, data = econsumption)
rs
abline(rs)
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
summary(fit)
predict(fit)
predict(fc)
source('~/Coding/r/fpp/4/ex.R')
?olympic
plot(olympic)
fit <- lm(time ~ Year, data = olympic)
plot(fit)
par(mfrow = c(2, 2))
plot(fir)
plot(firt)
plot(fit)
summary(fit)
plot(olympic)
abline(fit)
abline(log(fit))
fit <- lm(log(time) ~ Year, data = olympic)
abline(fit, col = "red")
fit <- lm(time ~ Year, data = olympic)
abline(fit, col = "red")
logolympics <- log(olympics)
logolympics <- olympics
logolympics <- olympic
logolympics <- log(olympic)
logolympic
logolympics
plot(logolympics)
par(mfrow = c(1, 2))
plot(jitter(time) ~ jitter(Year), data = olympic)
plot(time ~ Year, data = olympic)
par(mfrow = c(1, 2))
plot(time ~ Year, data = olympic)
plot(time ~ Year, data = logolympics)
lines(fit)
par(mfrow = c(1, 2))
plot(time ~ Year, data = logolympics)
logfit <- lm(time ~ Year, data = logolympics)
coefs <- coef(logfit)
coefs
levels(olympic)
levels(olympic$Year)
range(olympic$Year)
lines(1896 : 1996, exp(coefs[1] + coefs[2] * log(1896 : 1996)))
par(mfrow = c(1, 2))
logfit <- lm(time ~ Year, data = olympic)
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
coefs
exp(coefs[1] + coefs[2] * log(1896 : 1996)
)
coefs
source('~/Coding/r/fpp/4/ex.R')
plot(logolympic)
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
df
olympic
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
df
source('~/Coding/r/fpp/4/ex.R')
source('~/Coding/r/fpp/4/ex.R')
10 / 4
10 / 4 * 4 + 2
floor(10 / 4) * 4 + 2
10 %/% 4 * 4 + 2
10 %/% 4
(10 %/% 4) * 4
(10 %/% 4) * 4 + 2
(20 %/% 4) * 4 + 2
floor(20 / 4) * 4 + 2
20 / 4 * 4 + 2
22 / 4 * 4 + 2
floor(22 / 4) * 4 + 2
20 % 3
20 mod 3
mod(20, 3)
20 %% 3
sys.time()
Sys.time()
Sys.time().ms
Sys.time().ms()
System$currentTimeMillis()
runif
runif()
runif(1)
runif(1) * twoe
twoe <- 2 ^ 30
twoe
runif(1) * twoe
runif
runif(1)
0.1 * twoe
1 / (10 * twoe) * twoe
runif(1) * twoe
runif(1) * twoe
runif(1) * twoe
runif(1) * twoe
runif(1) * twoe
1:50
for i in 1:50
for (i in 1:50)
print(i)
floor(runif(1) * twoe) / twoe
twoe * twoe
twoe * twoe %% twoe
twoe * twoe %% (twoe + 1)
twoe * twoe %% (twoe - 1)
2 ^ 3.5
1 / 3.5
.5 ^ (1 / 3.5)
set.wd('~/Coding/study/s4/empi/lab3/')
cd('~/Coding/study/s4/empi/lab3/')
wd('~/Coding/study/s4/empi/lab3/')
('~/Coding/study/s4/empi/lab3/')
ls
ls()
cd()
setwd('~/Coding/study/s4/empi/lab3/')
ls()
ls(".")
ls("./")
load("fisher.R")
script("fisher.R")
source("fisher.R")
source("fisher.R")
source("fisher.R")
f.dist()
runif(10) ^ (1 / 3.5)
source("fisher.R")
f.dist()
Sys.sleep(1)
source("fisher.R")
f.dist()
source("fisher.R")
f.dist()
coveyou()
coveyou()
coveyou()
coveyou()
source("fisher.R")
coveyou()
coveyou()
coveyou()
unif()
unif()
unif()
unif()
source("fisher.R")
coveyou()
coveyou()
coveyou()
coveyou()
unif()
unif()
unif()
unif()
f.dist()
source("fisher.R")
f.dist()
rf(50, df1=7, df2=15)
source("fisher.R")
source("fisher.R")
f.dist()
}
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
rf(50, df1=7, df2=15)
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
f.dist(n=150)
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist(n=150)
betas <- sapply(1:50, beta(3.5, 7.5))
betas <- sapply(1:50, beta(3.5, 7.5))
betas <- sapply(1:50, beta
)
betas <- c()
for (i in 1:150) betas <- c(betas, beta(3.5, 7.5))
betas
rbeta(150)
rbeta(150, shape1=3.5, shape2=7.5)
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
f.dist()
f.dist()
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
f.dist()
rf(50, 7, 15)
rf(50, 7, 15, 1)
rf(50, 7, 15, 0)
rf(50, 7, 15, -1)
rf(50, 7, 15, 2)
rf(50, 7, 15)
rf(50, 7, 15)
f.dist()
f.dist(200)
f.dist(50, k1=20)
rf(50, 20)
rf(50, df1=20, df2=15)
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
f.dist()
f.dist()
f.dist()
f.dist()
f.dist()
x.current
f.dist()
x.current
source('~/Coding/study/s4/empi/lab3/fisher.R')
x.current
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
f.dist()
source('~/Coding/study/s4/empi/lab3/fisher.R')
f.dist()
f.dist()
source("fisher.R")
source("coveyou.R")
e
exp
exp(1)
exp(-9)
source("poisson.R")
source("poisson.R")
print(poisson.dist())
rpoiss(50)
rpois(50)
rpois(50, lambda=9)
f.dist()
f.dist()
f.dist()
f.dist()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
print(f.dist(100))
print(f.dist(200))
print(f.dist(300))
print(f.dist(500))
print(f.dist(500, k1=1, k2=1))
print(f.dist(1000))
print(f.dist(1000, k1=10, k2=1))
library(ggplot2)
install.packages(c("boot", "chron", "class", "cluster", "codetools", "curl", "data.table", "digest", "evaluate", "forecast", "foreign", "formatR", "gridExtra", "gtable", "highr", "HistData", "Hmisc", "htmltools", "httr", "jsonlite", "KernSmooth", "knitr", "lattice", "latticeExtra", "lme4", "lmtest", "manipulate", "MASS", "Matrix", "mgcv", "mime", "munsell", "nlme", "nnet", "pbkrtest", "plyr", "quantreg", "R6", "Rcpp", "RCurl", "rgl", "rJava", "rmarkdown", "RMySQL", "rpart", "SparseM", "spatial", "stringr", "survival", "testit", "testthat", "UsingR", "XML", "xtable"))
install.packages(c("boot", "chron", "class", "cluster", "codetools",
install.packages(c("boot", "chron", "class", "cluster", "codetools", "curl", "data.table", "digest", "evaluate", "forecast", "foreign", "formatR", "gridExtra", "gtable", "highr", "HistData", "Hmisc", "htmltools", "httr", "jsonlite", "KernSmooth", "knitr", "lattice", "latticeExtra", "lme4", "lmtest", "manipulate", "MASS", "Matrix", "mgcv", "mime", "munsell", "nlme", "nnet", "pbkrtest", "plyr", "quantreg", "R6", "Rcpp", "RCurl", "rgl", "rJava", "rmarkdown", "RMySQL", "rpart", "SparseM", "spatial", "stringr", "survival", "testit", "testthat", "UsingR", "XML", "xtable"))
asdn
install.packages(c("boot", "chron", "class", "cluster", "codetools", "curl", "data.table", "digest", "evaluate", "forecast", "foreign", "formatR", "gridExtra", "gtable", "highr", "HistData", "Hmisc", "htmltools", "httr", "jsonlite", "KernSmooth", "knitr", "lattice", "latticeExtra", "lme4", "lmtest", "manipulate", "MASS", "Matrix", "mgcv", "mime", "munsell", "nlme", "nnet", "pbkrtest", "plyr", "quantreg", "R6", "Rcpp", "RCurl", "rgl", "rJava", "rmarkdown", "RMySQL", "rpart", "SparseM", "spatial", "stringr", "survival", "testit", "testthat", "UsingR", "XML", "xtable"))
quit()
